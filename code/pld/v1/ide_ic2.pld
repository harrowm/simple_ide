Name      ide_ic2v3;
Partno    ;
Date      9/02/25;
Revision  03;
Designer  Malcolm Harrow;
Company   Malcolm Harrow, MIT License;
Assembly  None;
Location  None;
Device    g22V10;

/****************************************************************/
/*                                                              */
/* PLD code for the simple ide interface, sets CS and R/W lines */
/*                                                              */
/****************************************************************/

/* Pin Map
       --------
CLK   |1     24| VCC
AS    |2     23| IDECS1
IDECS |3     22| IDECS0
A4    |4     21| X
UDS   |5     20| X IDESEL
A2    |6     19| IDEWR
A1    |7     18| IDERD
X     |8     17| IDEBUF
RW    |9     16| DTACK
RESET |10    15| DTACK_ENABLE
A3    |11    14| WAIT
GND   |12    13| X
       --------
*/

/*
write CS1
write cs0
blip cs1
read cs1
*/

/**  Inputs  **/
PIN 1              = CLK;
PIN 2              = AS;           
PIN 3              = IDECS;
PIN 5              = UDS;
PIN 9              = RW;
PIN 10             = RESET;
PIN [4,11,6,7]     = [A4..1];

/**  Outputs  **/
PIN 14             = WAIT;
PIN 15             = DTACK_ENABLE;
PIN 16             = DTACK;
PIN 17             = IDEBUF;
PIN 18             = IDERD;
PIN 19             = IDEWR;
/*PIN 20             = IDESEL; */ /* needed for tri-state */ 
PIN 22             = IDECS0;
PIN 23             = IDECS1; 

/** Logic Equations **/
WAIT.sp = 'b'0; 
DTACK_ENABLE.sp = 'b'0; 

/* Need to gate off blips using AS ?  - might mess up timing below in sequence ??  but noew removed UDS .. lets see */
!IDECS0 = !IDECS & AS & !A4;	
!IDECS1 = !IDECS & AS & A4;	

DTACK.sp = 'b'0;  /* No need to use IDERDY as always 0 */
IDESEL = !IDECS0 # !IDECS1;
DTACK.oe = DTACK_ENABLE; 

!IDEBUF = !IDECS0 # !IDECS1;

!IDERD =  RW & IDESEL & !UDS & WAIT;
!IDEWR = !RW & IDESEL & !UDS;

FIELD STATE = [WAIT, DTACK, DTACK_ENABLE];

SEQUENCE STATE {
    PRESENT 'b'000
        IF IDESEL & RW /* remove & UDS */
            NEXT 'b'100;
        IF IDESEL & !RW /* remove & UDS */
            NEXT 'b'001;
        DEFAULT NEXT 'b'000;
    /* READ Sequence */
    PRESENT 'b'100
        NEXT 'b'101;
    PRESENT 'b'101
        IF !UDS
            NEXT 'b'111;
        DEFAULT NEXT 'b'101;
    PRESENT 'b'111
        NEXT 'b'110;
    PRESENT 'b'110
        NEXT 'b'000;
    /* WRITE Sequence */
    PRESENT 'b'001
        IF !UDS
            NEXT 'b'011;
        DEFAULT NEXT 'b'001;
    PRESENT 'b'011
        NEXT 'b'010;
    PRESENT 'b'010
        NEXT 'b'000;
}
